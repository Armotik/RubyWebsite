#config\packages\security.yaml

security:
  enable_authenticator_manager: true
  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    App\Entity\User:
      algorithm: auto

  # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: username
    api_user_provider:
      id: App\Security\ApiTokenProvider

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    api:
      pattern: ^/api/
      provider: api_user_provider
      custom_authenticator: App\Security\ApiAuthenticator
      stateless: true
      lazy: true
    login:
      pattern: ^/api/login
    main:
      lazy: true
      provider: app_user_provider
      custom_authenticator: App\Security\StaffAuthenticator
      logout:
        path: app_logout
        # where to redirect after logout
        # target: app_any_route

      remember_me:
        secret: '%kernel.secret%'
        lifetime: 604800
        path: /
        # by default, the feature is enabled by checking a checkbox in the
        # login form, uncomment the following line to always enable it.
        #always_remember_me: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used

  access_control:
    - { path: ^/api/login, roles: PUBLIC_ACCESS }
    - { path: ^/api/doc, roles: PUBLIC_ACCESS }
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

  role_hierarchy:
    ROLE_GUIDE: ROLE_USER
    ROLE_MOD_TEST: ROLE_USER
    ROLE_MOD: ROLE_MOD_TEST
    ROLE_MOD_PLUS: ROLE_MOD
    ROLE_SUPER_MOD: ROLE_MOD_PLUS
    ROLE_ADMIN: ROLE_SUPER_MOD
    ROLE_ADMIN_MANAGER: ROLE_ADMIN
    ROLE_BOT: ROLE_ADMIN
    ROLE_WEBMASTER: ROLE_ADMIN_MANAGER, AUTH_ALL  # AUTH_ALL is a custom role

when@test:
  security:
    password_hashers:
    # By default, password hashers are resource intensive and take time. This is
    # important to generate secure password hashes. In tests however, secure hashes
    # are not important, waste resources and increase test times. The following
    # reduces the work factor to the lowest possible values.
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
      algorithm: auto
      cost: 4 # Lowest possible value for bcrypt
      time_cost: 3 # Lowest possible value for argon
      memory_cost: 10 # Lowest possible value for argon